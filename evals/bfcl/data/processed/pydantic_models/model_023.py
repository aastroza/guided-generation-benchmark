# generated by datamodel-codegen:
#   filename:  json_schema.json
#   timestamp: 2024-04-29T19:45:43+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class Options(BaseModel):
    issuer: Optional[str] = Field(None, description='The entity that issued the token.')
    role: Optional[str] = Field(None, description='The role of the user in the system.')
    algorithm: Optional[str] = Field(
        None, description='The encoding algorithm to be used for token generation.'
    )


class CreateAuthToken(BaseModel):
    username: str = Field(
        ..., description='The username of the user for whom the token is being created.'
    )
    validity: Optional[int] = Field(
        None, description='The number of seconds the token remains valid.'
    )
    options: Options = Field(
        ..., description='options dictionary, default empty dictionary'
    )
