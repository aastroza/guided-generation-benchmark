# generated by datamodel-codegen:
#   filename:  json_schema.json
#   timestamp: 2024-04-29T19:43:09+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class PerformanceIndicatorEnum(Enum):
    Goals_Scored = 'Goals Scored'
    Assists_Made = 'Assists Made'
    Saves_Made = 'Saves Made'
    Cards_Received = 'Cards Received'


class SportsStatsGetPerformance(BaseModel):
    player_name: str = Field(..., description='Name of the player.')
    tournament: str = Field(..., description='Name of the soccer tournament.')
    season: str = Field(..., description="Specific season in format 'YYYY-YYYY'.")
    performance_indicator: Optional[List[PerformanceIndicatorEnum]] = Field(
        None,
        description='Array of performance indicators. Use as much as possible. Default to use all if not specified.',
    )
